{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ApimResourceGroup": {
            "type": "string"
        },
        "ApimServiceName": {
            "type": "string"
        },
        "AseHostingEnvironmentName": {
            "type": "string",
            "defaultValue": ""
        },
        "AseOutboundIpAddress": {
            "type": "string",
            "defaultValue": ""
        },
        "AseResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "aspInstances": {
            "type": "int"
        },
        "AspSize": {
            "type": "string"
        },
        "AspTier": {
            "type": "string"
        },
        "Environment": {
            "type": "string"
        },
        "cosmosDatabaseName": {
            "type": "string"
        },
        "cosmosDatabaseThroughput": {
            "type": "int"
        },
        "cosmosDatabaseNeedsCreation": {
            "type": "bool"
        },
        "slackWebHookToken": {
            "type": "securestring",
            "metadata": {
                "description": "the token (everything after https://hooks.slack.com/services/) for an incoming webhook in slack"
            }
        },
        "slackChannelForAlerts": {
            "type": "string",
            "metadata": {
                "description": "The slack channel to send alerts to"
            }
        },
        "emailAddressForAlerts": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "An email address to send alerts to"
            }
        },
        "enableAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable or disable alerting"
            }
        },
        "cpuPercentageThreshold": {
            "type": "string"
        },
        "memoryPercentageThreshold": {
            "type": "string"
        },
        "workspaceName": {
            "type": "string"
        },
        "workspaceResourceGroup": {
            "type": "string"
        }
    },
    "variables": {
        "ApimCompositeProductDisplayName": "Composite UI",
        "AppServicePlanName": "[concat(variables('ResourcePrefix'), '-asp')]",
        "BuildingBlocksDfcBaseUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
        "CosmosDbName": "[concat(variables('ResourcePrefix'), '-cdb')]",
        "ResourcePrefix": "[tolower(concat('dfc-', parameters('Environment'), '-compui-shared'))]",
        "StorageAccountName": "[tolower(concat('dfc', parameters('Environment'), 'compuisharedstr'))]",
        "MonitoringAppServicePlanName": "[concat(variables('ResourcePrefix'), '-mon-asp')]",
        "MonitoringAppInsightsName": "[concat(variables('ResourcePrefix'), '-mon-ai')]",
        "MonitoringFunctionAppName": "[concat(variables('ResourcePrefix'), '-mon-fa')]",
        "ActionGroupName": "[concat(variables('ResourcePrefix'), '-actgrp')]",
        "SharedResourceGroupName": "[concat('dfc-', parameters('Environment'), '-shared-rg')]",
        "SharedKeyVaultName": "[concat('dfc-', parameters('Environment'), '-shared-kv')]"
    },
    "resources": [
        {
            "name": "compositeui-apim-logger",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('ApimResourceGroup')]",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'APIM/apim-logger.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apimServiceName": {
                        "value": "[parameters('ApimServiceName')]"
                    },
                    "productDisplayName": {
                        "value": "[variables('ApimCompositeProductDisplayName')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "workspaceResourceGroup": {
                        "value": "[parameters('workspaceResourceGroup')]"
                    }
                }
            }
        },
        {
            "name": "compositeui-apim-product",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('ApimResourceGroup')]",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'APIM/apim-product.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "allowAnonymousAccess": {
                        "value": false
                    },
                    "apimServiceName": {
                        "value": "[parameters('ApimServiceName')]"
                    },
                    "productDisplayName": {
                        "value": "[variables('ApimCompositeProductDisplayName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('CosmosDbName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'cosmos-db.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cosmosDbName": {
                        "value": "[variables('CosmosDbName')]"
                    },
                    "cosmosApiType": {
                        "value": "SQL"
                    },
                    "defaultConsistencyLevel": {
                        "value": "Strong"
                    },
                    "additionalIpAddresses": {
                        "value": "[parameters('AseOutboundIpAddress')]"
                    },
                    "allowConnectionsFromAzureDataCenters": {
                        "value": false
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "resourceGroup": "[variables('SharedResourceGroupName')]",
            "name": "[concat(variables('SharedKeyVaultName'), '-secret-ConnectionString')]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('CosmosDbName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'KeyVault/keyvault-secrets.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultName": {
                        "value": "[variables('SharedKeyVaultName')]"
                    },
                    "secrets": {
                        "value": [
                            {
                                "name": "CompositeUISharedComosDatabase",
                                "secret": "[concat('AccountEndpoint=https://', variables('CosmosDbName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('CosmosDbName')), '2023-11-15').primaryMasterKey, ';')]",
                                "type": "Microsoft.KeyVault/vaults/secrets"
                            }
                        ]
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(variables('CosmosDbName'), '-', parameters('cosmosDatabaseName'))]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('CosmosDbName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'CosmosDb/cosmos-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "accountName": {
                        "value": "[variables('CosmosDbName')]"
                    },
                    "databaseName": {
                        "value": "[parameters('cosmosDatabaseName')]"
                    },
                    "useSharedRequestUnits": {
                        "value": true
                    },
                    "offerThroughput": {
                        "value": "[int(parameters('cosmosDatabaseThroughput'))]"
                    },
                    "databaseNeedsCreation": {
                        "value": "[bool(parameters('cosmosDatabaseNeedsCreation'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('StorageAccountName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'storage-account.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('StorageAccountName')]"
                    },
                    "storageKind": {
                        "value": "StorageV2"
                    }
                }
            }
        },
        {
            "name": "[variables('MonitoringAppServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('MonitoringAppServicePlanName')]",
                "computeMode": "Dynamic"
            },
            "sku": {
                "name":"Y1",
                "tier":"Dynamic"
            }
        },
        {
            "apiVersion": "2020-02-02",
            "name": "[variables('MonitoringAppInsightsName')]",
            "type": "Microsoft.Insights/components",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('MonitoringAppInsightsName')))]": "Resource"
            },
            "properties": {
                "Application_Type": "web",
                "workspaceResourceId": "[resourceId(parameters('workspaceResourceGroup'), 'Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
            }
        },
        {
            "name": "[variables('MonitoringFunctionAppName')]",
            "apiVersion": "2018-11-01",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[variables('MonitoringAppServicePlanName')]",
                "[variables('MonitoringAppInsightsName')]"
            ],
            "properties": {
                "httpsOnly": true,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(concat('microsoft.insights/components/', variables('MonitoringAppInsightsName'))).InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[reference(variables('StorageAccountName')).outputs.storageConnectionString.value]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[reference(variables('StorageAccountName')).outputs.storageConnectionString.value]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[variables('MonitoringFunctionAppName')]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "powershell"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "SlackToken",
                            "value": "[parameters('slackWebHookToken')]"
                        },
                        {
                            "name": "MSDEPLOY_RENAME_LOCKED_FILES",
                            "value": "1"
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('ActionGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/action-groups.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "webHookUrl": {
                        "value": "[concat('https://', variables('MonitoringFunctionAppName'), '.azurewebsites.net/api/MonitorAlert?code=', listkeys(concat(resourceId('Microsoft.Web/sites', variables('MonitoringFunctionAppName')), '/host/default'), '2018-11-01').functionKeys.default, '&channel=', parameters('slackChannelForAlerts'))]"
                    },
                    "emailAddress": {
                        "value": "[parameters('emailAddressForAlerts')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('MonitoringFunctionAppName')]"
            ]
        },
        {
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('CosmosDbName'), '-Conflicts')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enabled": {
                        "value": "[parameters('enableAlerts')]"
                    },
                    "alertName": {
                        "value": "[concat(variables('CosmosDbName'), '-metric-conflicts')]"
                    },
                    "alertSeverity": {
                        "value": 3
                    },
                    "metricName": {
                        "value": "TotalRequestUnits"
                    },
                    "operator": {
                        "value": "GreaterThan"
                    },
                    "threshold": {
                        "value": "0"
                    },
                    "dimensions": {
                        "value": [
                            {
                                "name": "StatusCode",
                                "operator": "Include",
                                "values": [ "429" ]
                            }
                        ]
                    },
                    "aggregation": {
                        "value": "Average"
                    },
                    "windowSize": {
                        "value": "PT5M"
                    },
                    "evaluationFrequency": {
                        "value": "PT1M"
                    },
                    "actionGroupName": {
                        "value": "[variables('ActionGroupName')]"
                    },
                    "resourceId": {
                        "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('CosmosDbName'))]"
                    }
                }
            },
            "dependsOn": [
                "[variables('ActionGroupName')]"
            ]
        }
    ],
    "outputs": {}
}